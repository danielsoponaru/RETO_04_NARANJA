maestrostr <- readRDS("Datos/originales/maestroestr.RDS")
objetivos <- readRDS("Datos/originales/objetivos.RDS")
tickets_enc <- readRDS("Datos/originales/tickets_enc.RDS")
matriz=readRDS("Datos/transformados/matriz.RDS")
# Cargar librerías necesarias
library(recommenderlab)
maestrostr <- readRDS("Datos/originales/maestroestr.RDS")
objetivos <- readRDS("Datos/originales/objetivos.RDS")
maestrostr <- readRDS("Datos/originales/maestroestr.RDS")
maestrostr <- readRDS("Datos/originales/maestroestr.RDS")
df=read.csv("C:/Users/jonba/Downloads/spotify_cl.csv")
View(df)
df$cluster=as.factor(df$cluster)
ui=fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label='Number of observations:', min=1, max=100, value= c(1,100)),
selectInput('variable', 'seleciona la variable', choices = c('acousticness', 'danceability')),
selelectInput("cluster", "Selecciona cluster:", choices = 1:5),  # assuming 5 clusters
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", dataTableOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
install.packages("shiny")
ui=fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label='Number of observations:', min=1, max=100, value= c(1,100)),
selectInput('variable', 'seleciona la variable', choices = c('acousticness', 'danceability')),
selelectInput("cluster", "Selecciona cluster:", choices = 1:5),  # assuming 5 clusters
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", dataTableOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
library(shiny)
df$cluster=as.factor(df$cluster)
ui=fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label='Number of observations:', min=1, max=100, value= c(1,100)),
selectInput('variable', 'seleciona la variable', choices = c('acousticness', 'danceability')),
selelectInput("cluster", "Selecciona cluster:", choices = 1:5),  # assuming 5 clusters
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", dataTableOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
ui=fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label='Number of observations:', min=1, max=100, value= c(1,100)),
selectInput('variable', 'seleciona la variable', choices = c('acousticness', 'danceability')),
selectInput("cluster", "Selecciona cluster:", choices = 1:5),  # assuming 5 clusters
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", dataTableOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
ui=fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label='Number of observations:', min=1, max=100, value= c(1,100)),
selectInput('variable', 'seleciona la variable', choices = c('acousticness', 'danceability')),
selectInput("cluster", "Selecciona cluster:", choices = 1:5),  # assuming 5 clusters
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", dataTableOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
library(DT)
ui = fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label = 'Posición en el ranking:', min = 1, max = 100, value = c(1, 100)),
selectInput('variable', 'Selecciona la variable', choices = c('acousticness', 'danceability')),
selectInput("cluster", "Selecciona cluster:", choices = 1:5),
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", DT::DTOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
ui
View(ui)
plot(ui)
ui = fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label = 'Posición en el ranking:', min = 1, max = 100, value = c(1, 100)),
selectInput('variable', 'Selecciona la variable', choices = c('acousticness', 'danceability')),
selectInput("cluster", "Selecciona cluster:", choices = 1:5),
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", DT::DTOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
ui
ui = fluidPage(
titlePanel("Spotify TOP 2018"),
sidebarLayout(
sidebarPanel(
sliderInput('ranking', label = 'Posición en el ranking:', min = 1, max = 100, value = c(1, 100)),
selectInput('variable', 'Selecciona la variable', choices = c('acousticness', 'danceability')),
selectInput("cluster", "Selecciona cluster:", choices = 1:5),
actionButton("goButton", "Ejecutar")
),
mainPanel(
tabsetPanel(
tabPanel("Canciones", DT::DTOutput("songs_table")),
tabPanel("Cluster", plotOutput("cluster_plot")),
tabPanel("Variable", plotOutput("var_plot"))
)
)
)
)
shinyApp(ui=ui, server=server)
shinyApp(ui=ui, server = server)
maestrostr <- readRDS("Datos/maestroestr.RDS")
objetivos <- readRDS("Datos/objetivos.RDS")
tickets_enc <- readRDS("Datos/tickets_enc.RDS")
matriz=readRDS("Datos/matriz.RDS")
# Cargar librerías necesarias
library(tidyverse)
maestrostr <- readRDS("Datos/maestroestr.RDS")
objetivos <- readRDS("Datos/objetivos.RDS")
maestrostr <- readRDS("Datos/maestroestr.RDS")
